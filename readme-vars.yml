---

# project information
project_name: maintenance
project_url: "https://imagegenius/docker-maintenance/"
project_logo: "https://avatars.githubusercontent.com/u/121947548?s=200&v=4"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) - Minimal Nginx Docker image with a soul purpose to be a maintenance page for when your main webserver is down"
project_github_repo_url: "https://github.com/imagegenius/docker-{{ project_name }}"
project_blurb_optional_extras_enabled: false

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}

# container parameters
common_param_env_vars_enabled: true
param_container_name: "{{ project_name }}"
param_usage_include_net: false
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "Australia/Melbourne", desc: "Specify a timezone to use eg. Australia/Melbourne." }
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "path_to_data", desc: "Contains configuration files" }
  - { vol_path: "/swag", vol_host_path: "path_to_swag", desc: "Location of swag appdata on the host" }
param_usage_include_ports: true
param_ports:
  - { external_port: "80", internal_port: "80", port_desc: "HTTP Port" }
  - { external_port: "443", internal_port: "443", port_desc: "HTTPS Port" }
param_device_map: false
cap_add_param: false

# optional container parameters
opt_param_usage_include_env: false
opt_param_usage_include_vols: false
opt_param_usage_include_ports: false
opt_param_device_map: false
opt_cap_add_param: false
optional_block_1: false

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  This image probably does not work anymore, use with caution. or open an issue/pr

  Barebones Nginx server made to be a maintenance page for when your SWAG container is down or backing up. Theoretically, when you stop your SWAG container and spin this one up, it should just work. When you startup this image it will attempt to migrate from SWAG, and it works for me so whatever. You may need to change some settings in your configs for Nginx to start successfully. There is also a standalone mode if you do not have SWAG.

  If you have important proxy-confs, such as Home Assistant that you need to have 24/7 uptime, add proxy-confs/homeassistant.<subdomain/subfolder>.conf to /config/includes.txt and it will copy over to the maintenance appdata, and you will be able to access Home Assistant through this container. This works for any proxy config.

# changelog
changelogs:
  - { date: "02.01.23:", desc: "Initial Release." }
